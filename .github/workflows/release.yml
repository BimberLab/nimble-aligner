name: Release on push to main
on:
  push:
    branches:
      - 'main'

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          prerelease: true
      - shell: bash
        run: |
          cut -d " " -f1 <<<'${{ steps.create_release.outputs.upload_url }}' > url.txt
      - name: Save release URL
        uses: actions/upload-artifact@v2
        with:
          name: url
          path: url.txt

  build:
    needs: release
    name: Build and upload release asset
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: Ubuntu.out
            asset_name: Ubuntu.out
          - os: ubuntu-latest
            container: iyxd/centos7-rust
            artifact_name: Centos.out
            asset_name: Centos.out
          - os: macos-latest
            artifact_name: MacOS.out
            asset_name: MacOS.out
          - os: windows-latest
            artifact_name: windows.exe
            asset_name: windows.exe
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: cargo rustc --release --bin immuno_genotyper -- -C target-cpu=native
      - shell: bash
        run: |
          mv ./target/release/immuno_genotyper ./target/release/${{ matrix.artifact_name }}
      - name: Download release url
        uses: actions/download-artifact@v2
        with:
          name: url
      - name: Read release URL
        id: url
        uses: pCYSl5EDgo/cat@master
        with:
          path: url.txt
      - name: Upload binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.url.outputs.text }}
          asset_path: target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream